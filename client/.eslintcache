[{"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/index.js":"1","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/App.js":"2","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Landing.js":"3","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Navbar.js":"4","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/auth/Login.js":"5","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/auth/Register.js":"6","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/store.js":"7","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/index.js":"8","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/alert.js":"9","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/types.js":"10","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/alert.js":"11","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Alert.js":"12","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/auth.js":"13","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/auth.js":"14","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/utils/setAuthToken.js":"15","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Dashboard.js":"16","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/routing/PrivateRoute.js":"17","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/profile.js":"18","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/profile.js":"19","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Spinner.js":"20","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/CreateProfile.js":"21","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/DashboardActions.js":"22","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/EditProfile.js":"23","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/AddExperience.js":"24","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/AddEducation.js":"25","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Experience.js":"26","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Education.js":"27","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profiles/Profiles.js":"28","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profiles/ProfileItem.js":"29","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/Profile.js":"30","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileTop.js":"31","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileAbout.js":"32","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileExperience.js":"33","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileEducation.js":"34","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileGithub.js":"35","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/post.js":"36","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/Posts.js":"37","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/post.js":"38","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/PostItem.js":"39","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/PostForm.js":"40","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/Post.js":"41","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/CommentForm.js":"42","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/CommentItem.js":"43","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/NotFound.js":"44","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/routing/Routes.js":"45"},{"size":170,"mtime":1611844511170,"results":"46","hashOfConfig":"47"},{"size":927,"mtime":1613649410065,"results":"48","hashOfConfig":"47"},{"size":1136,"mtime":1613027572277,"results":"49","hashOfConfig":"47"},{"size":1512,"mtime":1613578254203,"results":"50","hashOfConfig":"47"},{"size":1897,"mtime":1613028486590,"results":"51","hashOfConfig":"47"},{"size":2768,"mtime":1612980944611,"results":"52","hashOfConfig":"47"},{"size":382,"mtime":1612882016855,"results":"53","hashOfConfig":"47"},{"size":227,"mtime":1613576912851,"results":"54","hashOfConfig":"47"},{"size":380,"mtime":1612886864932,"results":"55","hashOfConfig":"47"},{"size":1020,"mtime":1613641057961,"results":"56","hashOfConfig":"47"},{"size":342,"mtime":1613421695673,"results":"57","hashOfConfig":"47"},{"size":485,"mtime":1612886741164,"results":"58","hashOfConfig":"47"},{"size":2018,"mtime":1613414399963,"results":"59","hashOfConfig":"47"},{"size":1225,"mtime":1613411521400,"results":"60","hashOfConfig":"47"},{"size":250,"mtime":1612978468268,"results":"61","hashOfConfig":"47"},{"size":1922,"mtime":1613480938988,"results":"62","hashOfConfig":"47"},{"size":631,"mtime":1613025550433,"results":"63","hashOfConfig":"47"},{"size":998,"mtime":1613479010005,"results":"64","hashOfConfig":"47"},{"size":5439,"mtime":1613585704105,"results":"65","hashOfConfig":"47"},{"size":258,"mtime":1613027724391,"results":"66","hashOfConfig":"47"},{"size":7275,"mtime":1613039078025,"results":"67","hashOfConfig":"47"},{"size":663,"mtime":1613034671349,"results":"68","hashOfConfig":"47"},{"size":8000,"mtime":1613037697139,"results":"69","hashOfConfig":"47"},{"size":3494,"mtime":1613480801139,"results":"70","hashOfConfig":"47"},{"size":3547,"mtime":1613480773338,"results":"71","hashOfConfig":"47"},{"size":1346,"mtime":1613411921565,"results":"72","hashOfConfig":"47"},{"size":1332,"mtime":1613411912892,"results":"73","hashOfConfig":"47"},{"size":1214,"mtime":1613480626932,"results":"74","hashOfConfig":"47"},{"size":995,"mtime":1613480445829,"results":"75","hashOfConfig":"47"},{"size":2919,"mtime":1613642065911,"results":"76","hashOfConfig":"47"},{"size":1841,"mtime":1613498468948,"results":"77","hashOfConfig":"47"},{"size":830,"mtime":1613499166025,"results":"78","hashOfConfig":"47"},{"size":766,"mtime":1613560115338,"results":"79","hashOfConfig":"47"},{"size":773,"mtime":1613563378988,"results":"80","hashOfConfig":"47"},{"size":1698,"mtime":1613564796353,"results":"81","hashOfConfig":"47"},{"size":1575,"mtime":1613641244096,"results":"82","hashOfConfig":"47"},{"size":1027,"mtime":1613584715409,"results":"83","hashOfConfig":"47"},{"size":3740,"mtime":1613641098923,"results":"84","hashOfConfig":"47"},{"size":2540,"mtime":1613640317598,"results":"85","hashOfConfig":"47"},{"size":995,"mtime":1613584667371,"results":"86","hashOfConfig":"47"},{"size":1179,"mtime":1613642280923,"results":"87","hashOfConfig":"47"},{"size":1036,"mtime":1613641503308,"results":"88","hashOfConfig":"47"},{"size":1381,"mtime":1613642508329,"results":"89","hashOfConfig":"47"},{"size":365,"mtime":1613649070688,"results":"90","hashOfConfig":"47"},{"size":1774,"mtime":1613649458862,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1y7rkt8",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/index.js",[],["191","192"],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/App.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Landing.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Navbar.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/auth/Login.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/auth/Register.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/store.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/index.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/alert.js",["193"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n    const {type, payload} = action\n    \n    switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/types.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/alert.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Alert.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/auth.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/auth.js",["194"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\n// LOGOUT / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/utils/setAuthToken.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Dashboard.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/routing/PrivateRoute.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/profile.js",["195"],"import {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/profile.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/Spinner.js",["196"],"import React, { Fragment } from \"react\";\nimport spinner from \"./spinner.gif\";\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n      alt=\"Loading...\"\n    />\n  </Fragment>\n);\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/CreateProfile.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/DashboardActions.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/EditProfile.js",["197"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    status: \"\",\n    skills: \"\",\n    githubusername: \"\",\n    bio: \"\",\n    twitter: \"\",\n    facebook: \"\",\n    linkedin: \"\",\n    youtube: \"\",\n    instagram: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? \"\" : profile.company,\n      website: loading || !profile.website ? \"\" : profile.website,\n      location: loading || !profile.location ? \"\" : profile.location,\n      status: loading || !profile.status ? \"\" : profile.status,\n      skills: loading || !profile.skills ? \"\" : profile.skills.join(\",\"),\n      githubusername:\n        loading || !profile.githubusername ? \"\" : profile.githubusername,\n      bio: loading || !profile.bio ? \"\" : profile.bio,\n      twitter: loading || !profile.social ? \"\" : profile.social.twitter,\n      facebook: loading || !profile.social ? \"\" : profile.social.facebook,\n      linkedin: loading || !profile.social ? \"\" : profile.social.linkedin,\n      youtube: loading || !profile.social ? \"\" : profile.social.youtube,\n      instagram: loading || !profile.social ? \"\" : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Edit Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Add some changes to your profile\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option>* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\" />\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/AddExperience.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile-forms/AddEducation.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Experience.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/dashboard/Education.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profiles/Profiles.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profiles/ProfileItem.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/Profile.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileTop.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileAbout.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileExperience.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileEducation.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/profile/ProfileGithub.js",["198"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map(repo => (\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(\n  mapStateToProps,\n  { getGithubRepos }\n)(ProfileGithub);","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/reducers/post.js",["199"],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/Posts.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/actions/post.js",["200"],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/PostItem.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/posts/PostForm.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/Post.js",["201"],"import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport { getPost } from \"../../actions/post\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ post: state.post });\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/CommentForm.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/post/CommentItem.js",["202"],"import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Moment from \"react-moment\";\nimport {deleteComment} from '../../actions/post'\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => {\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => deleteComment(postId, _id)}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {deleteComment})(CommentItem);\n","/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/layout/NotFound.js",[],"/Users/shifair/Project/Udemy/MERN/social-media/devconnector/client/src/components/routing/Routes.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":5,"column":1,"nodeType":"209","endLine":16,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":20,"column":1,"nodeType":"209","endLine":55,"endColumn":2},{"ruleId":"207","severity":1,"message":"208","line":18,"column":1,"nodeType":"209","endLine":57,"endColumn":2},{"ruleId":"207","severity":1,"message":"210","line":4,"column":1,"nodeType":"209","endLine":12,"endColumn":3},{"ruleId":"211","severity":1,"message":"212","line":48,"column":6,"nodeType":"213","endLine":48,"endColumn":34,"suggestions":"214"},{"ruleId":"211","severity":1,"message":"215","line":10,"column":6,"nodeType":"213","endLine":10,"endColumn":22,"suggestions":"216"},{"ruleId":"207","severity":1,"message":"208","line":19,"column":1,"nodeType":"209","endLine":79,"endColumn":2},{"ruleId":"217","severity":1,"message":"218","line":155,"column":11,"nodeType":"219","messageId":"220","endLine":155,"endColumn":14},{"ruleId":"211","severity":1,"message":"221","line":14,"column":6,"nodeType":"213","endLine":14,"endColumn":15,"suggestions":"222"},{"ruleId":"217","severity":1,"message":"223","line":1,"column":17,"nodeType":"219","messageId":"220","endLine":1,"endColumn":25},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["226"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["227"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["228"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"235","text":"236"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"237","text":"238"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"239","text":"240"},[1653,1681],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[335,351],"[getGithubRepos, username]",[499,508],"[getPost, match.params.id]"]